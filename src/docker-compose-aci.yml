services:
  neo4j:
    image: ${DOCKER_REGISTRY-}neo4j:latest
    container_name: dk-neo4j
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j-data:/mnt/data
      - neo4j-import:/mnt/import
      - neo4j-logs:/mnt/logs
      - neo4j-plugins:/mnt/plugins
    environment:
      - NEO4J_AUTH=${HorizonNeo4jUser}/${HorizonNeo4jPassword}
      - NEO4J_dbms_directories_data=/mnt/data
      - NEO4J_dbms_directories_import=/mnt/import
      - NEO4J_dbms_directories_logs=/mnt/logs
      - NEO4J_dbms_directories_plugins=/mnt/plugins

  userstore-api:
    image: ${DOCKER_REGISTRY-}userstore
    container_name: userstore-api
    build:
      context: .
      dockerfile: Identities/UserStore/UserStore.API/Dockerfile

  gene-api:
    image: ${DOCKER_REGISTRY-}gene
    container_name: gene-api
    build:
      context: .
      dockerfile: Services/Gene/Gene.API/Dockerfile

  target-api:
    image: ${DOCKER_REGISTRY-}target
    container_name: target-api
    build:
      context: .
      dockerfile: Services/Target/Target.API/Dockerfile

  screen-api:
    image: ${DOCKER_REGISTRY-}screen
    container_name: screen-api
    build:
      context: .
      dockerfile: Services/Screen/Screen.API/Dockerfile

  hitassessment-api:
    image: ${DOCKER_REGISTRY-}hitassessment
    container_name: hitassessment-api
    build:
      context: .
      dockerfile: Services/HitAssessment/HitAssessment.API/Dockerfile

  project-api:
    image: ${DOCKER_REGISTRY-}project
    container_name: project-api
    build:
      context: .
      dockerfile: Services/Project/Project.API/Dockerfile
  
  horizon-api:
    image: ${DOCKER_REGISTRY-}horizon
    container_name: horizon-api
    build:
      context: .
      dockerfile: Services/Horizon/Horizon.API/Dockerfile

  mlogix-api:
    image: ${DOCKER_REGISTRY-}mlogix
    container_name: mlogix-api
    build:
      context: .
      dockerfile: Services/MLogix/MLogix.API/Dockerfile

  questionnaire-api:
    image: ${DOCKER_REGISTRY-}questionnaire
    container_name: questionnaire-api
    build:
      context: .
      dockerfile: Services/Questionnaire/Questionnaire.API/Dockerfile

  comment-api:
    image: ${DOCKER_REGISTRY-}comment
    container_name: comment-api
    build:
      context: .
      dockerfile: Services/Comment/Comment.API/Dockerfile

  # Ocelotapigw:
  #   image: ${DOCKER_REGISTRY-}ocelotapigw
  #   build:
  #     context: .
  #     dockerfile: ApiGateways/OcelotApiGw/Dockerfile
  
  simplegw-api:
    image: ${DOCKER_REGISTRY-}simplegw
    container_name: simplegw-api
    build:
      context: .
      dockerfile: ApiGateways/SimpleGW/SimpleGW.API/Dockerfile

  docustore-api:
    container_name: docustore-api
    image: ${DOCKER_REGISTRY-}docustore
    build:
      context: .
      dockerfile: Services/DocuStore/DocuStore.API/Dockerfile

  event-management-api:
    container_name: event-management-api
    image: ${DOCKER_REGISTRY-}event-management
    build:
      context: .
      dockerfile: Extensions/Daikon.EventManagement/Dockerfile

  user-preferences-api:
    container_name: user-preferences-api
    image: ${DOCKER_REGISTRY-}user-preferences-api
    build:
      context: .
      dockerfile: Services/UserPreferences/UserPreferences.API/Dockerfile

  event-history-api:
    container_name: event-history-api
    image: ${DOCKER_REGISTRY-}event-history
    build:
      context: .
      dockerfile: Services/EventHistory/EventHistory.API/Dockerfile

  aggregators-api:
    container_name: aggregators-api
    image: ${DOCKER_REGISTRY-}aggregators
    build:
      context: .
      dockerfile: Aggregators/Aggregators.API/Dockerfile

volumes:
  moldb-data:
  neo4j-data:
  neo4j-import:
  neo4j-logs:
  neo4j-plugins:
