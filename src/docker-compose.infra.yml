services:
  DKPortainer:
    image: portainer/portainer
    container_name: dk_portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - daikon-be-net

  DKPGAdmin:
    image: dpage/pgadmin4
    container_name: dk_pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - daikon-be-net

  Kafka:
    container_name: "kafka"
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - daikon-be-net

  EventStoreDb:
    container_name: "eventstoredb"
    image: mongo:jammy
    restart: always
    cpus: '0.1'
    ports:
      - "27017:27017"
    volumes:
      - "eventdb_mongo_data:/data/db"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    networks:
      - daikon-be-net

  # MolDb_Postgres:
  #   container_name: "moldb-postgres"
  #   image: informaticsmatters/rdkit-cartridge-debian:Release_2024_03_3
  #   environment:
  #     POSTGRES_DB: chemdb
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - moldb_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - daikon-be-net

  # MolDb_Postgres:
  #   container_name: "moldb-postgres"
  #   image: ${DOCKER_REGISTRY-}rdkit-catridge
  #   build:
  #     context: .
  #     dockerfile: docker-rdkit/Dockerfile-debian-rdkit-catridge
  #   environment:
  #     POSTGRES_DB: chemdb
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - moldb_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

  Neo4j:
    image: neo4j:5.21-community
    container_name: dk_neo4j
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
    networks:
      - daikon-be-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 5051:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: Kafka:9092
    networks:
      - daikon-be-net

volumes:
  portainer_data:
  # moldb_data:
  pgadmin_data:
  eventdb_mongo_data:
  kafka_data:
  zookeeper_data:
  neo4j_data:
  neo4j_import:
  neo4j_logs:
  neo4j_plugins:

networks:
  daikon-be-net:
    external: true
    name: daikon-be-net